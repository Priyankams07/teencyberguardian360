{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mspri\\\\OneDrive\\\\Desktop\\\\TeenCyber360\\\\teencyberguardian360\\\\src\\\\pages\\\\SwipeGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SwipeGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst scenarios = [{\n  text: \"You receive a friend request from someone you don’t know with no mutual friends.\",\n  correct: \"red\"\n}, {\n  text: \"Your school’s official website asks you to update your password.\",\n  correct: \"green\"\n}, {\n  text: \"You win a lottery you never entered and are asked to click a link.\",\n  correct: \"red\"\n}, {\n  text: \"A classmate sends a Google Drive link to shared homework.\",\n  correct: \"green\"\n}, {\n  text: \"You are asked to download a free game from a website with lots of pop-up ads.\",\n  correct: \"red\"\n}, {\n  text: \"A teacher tells you to join a secure Zoom class using a password.\",\n  correct: \"green\"\n}, {\n  text: \"A message says 'Your device is infected! Click here to fix it'.\",\n  correct: \"red\"\n}, {\n  text: \"You use a different, strong password for each online account.\",\n  correct: \"green\"\n}, {\n  text: \"You post your school ID card on social media.\",\n  correct: \"red\"\n}, {\n  text: \"You use two-factor authentication for your email.\",\n  correct: \"green\"\n}, {\n  text: \"You get an email saying your account will be closed unless you act now!\",\n  correct: \"red\"\n}, {\n  text: \"You report a suspicious message to a trusted adult or teacher.\",\n  correct: \"green\"\n}, {\n  text: \"You install antivirus software and keep it updated.\",\n  correct: \"green\"\n}, {\n  text: \"You use public Wi-Fi to log into your bank account.\",\n  correct: \"red\"\n}];\nconst SwipeGame = () => {\n  _s();\n  const [index, setIndex] = useState(0);\n  const [feedback, setFeedback] = useState(\"\");\n  const handleChoice = choice => {\n    const correctChoice = scenarios[index].correct;\n    if (choice === correctChoice) {\n      setFeedback(\"✅ Correct!\");\n    } else {\n      setFeedback(\"❌ Oops! Try again.\");\n    }\n    setTimeout(() => {\n      setFeedback(\"\");\n      setIndex(prev => (prev + 1) % scenarios.length);\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"swipe-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Swipe Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scenario-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: scenarios[index].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"red-flag\",\n          onClick: () => handleChoice(\"red\"),\n          children: \"\\uD83D\\uDEA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"green-flag\",\n          onClick: () => handleChoice(\"green\"),\n          children: \"\\u2705\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback\",\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(SwipeGame, \"v4xcZI/R0Re7nvEOixyqbxPfLRQ=\");\n_c = SwipeGame;\nexport default SwipeGame;\nvar _c;\n$RefreshReg$(_c, \"SwipeGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","scenarios","text","correct","SwipeGame","_s","index","setIndex","feedback","setFeedback","handleChoice","choice","correctChoice","setTimeout","prev","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mspri/OneDrive/Desktop/TeenCyber360/teencyberguardian360/src/pages/SwipeGame.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './SwipeGame.css';\r\n\r\nconst scenarios = [\r\n    {\r\n      text: \"You receive a friend request from someone you don’t know with no mutual friends.\",\r\n      correct: \"red\",\r\n    },\r\n    {\r\n      text: \"Your school’s official website asks you to update your password.\",\r\n      correct: \"green\",\r\n    },\r\n    {\r\n      text: \"You win a lottery you never entered and are asked to click a link.\",\r\n      correct: \"red\",\r\n    },\r\n    {\r\n      text: \"A classmate sends a Google Drive link to shared homework.\",\r\n      correct: \"green\",\r\n    },\r\n    {\r\n      text: \"You are asked to download a free game from a website with lots of pop-up ads.\",\r\n      correct: \"red\",\r\n    },\r\n    {\r\n      text: \"A teacher tells you to join a secure Zoom class using a password.\",\r\n      correct: \"green\",\r\n    },\r\n    {\r\n      text: \"A message says 'Your device is infected! Click here to fix it'.\",\r\n      correct: \"red\",\r\n    },\r\n    {\r\n      text: \"You use a different, strong password for each online account.\",\r\n      correct: \"green\",\r\n    },\r\n    {\r\n      text: \"You post your school ID card on social media.\",\r\n      correct: \"red\",\r\n    },\r\n    {\r\n      text: \"You use two-factor authentication for your email.\",\r\n      correct: \"green\",\r\n    },\r\n    {\r\n      text: \"You get an email saying your account will be closed unless you act now!\",\r\n      correct: \"red\",\r\n    },\r\n    {\r\n      text: \"You report a suspicious message to a trusted adult or teacher.\",\r\n      correct: \"green\",\r\n    },\r\n    {\r\n      text: \"You install antivirus software and keep it updated.\",\r\n      correct: \"green\",\r\n    },\r\n    {\r\n      text: \"You use public Wi-Fi to log into your bank account.\",\r\n      correct: \"red\",\r\n    }\r\n  ];\r\n  \r\n\r\nconst SwipeGame = () => {\r\n  const [index, setIndex] = useState(0);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n\r\n  const handleChoice = (choice) => {\r\n    const correctChoice = scenarios[index].correct;\r\n    if (choice === correctChoice) {\r\n      setFeedback(\"✅ Correct!\");\r\n    } else {\r\n      setFeedback(\"❌ Oops! Try again.\");\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setFeedback(\"\");\r\n      setIndex((prev) => (prev + 1) % scenarios.length);\r\n    }, 1500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"swipe-game\">\r\n      <h2>Swipe Game</h2>\r\n      <div className=\"scenario-card\">\r\n        <p>{scenarios[index].text}</p>\r\n        <div className=\"buttons\">\r\n          <button className=\"red-flag\" onClick={() => handleChoice(\"red\")}>🚩</button>\r\n          <button className=\"green-flag\" onClick={() => handleChoice(\"green\")}>✅</button>\r\n        </div>\r\n        <p className=\"feedback\">{feedback}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SwipeGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}